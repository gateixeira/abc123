# -*- mode: Python -*-

"""
* Frontend
  * Language: Go
  * Other notes: calls out to both `letters` and `numbers` microservices.
* Letters
  * Language: JavaScript
  * Other notes: Uses yarn. Does a `yarn install` for package dependencies iff they have changed.
* Numbers
    * Language: Python
    * Other notes: does a `pip install` for package dependencies. Reinstalls dependencies iff they have changed.
"""

numbers_port = 8001
letters_port = 8002

local_resource(
  'fe',
  'go install github.com/windmilleng/abc123/fe',
  serve_cmd='cd fe && fe --port=8000 --letters-host=localhost:%d --numbers-host=localhost:%d' % (letters_port, numbers_port),
  deps=['fe'],
  # fe reads templates from disk on every request, so we don't need to recompile + restart for changes to them
  ignore=['fe/web/templates'],
  resource_deps=['letters', 'numbers', 'go_proto']
)

local_resource(
  'letters',
  'cd letters && yarn install',
  serve_cmd='cd letters/src && node index.js --port %d' % (letters_port),
)

local_resource(
  'numbers',
  'cd numbers && pip install -r requirements.txt',
  serve_cmd='cd numbers && python app.py --port=%d' % (numbers_port),
  # numbers is a flask app that handles most changes via hot reloading, but
  # not requirements.txt changes
  deps=['numbers/requirements.txt'],
  resource_deps=['python_proto'],
)

# this is for example purposes only - the compiled protobufs are not currently used by the services
for lang in ['go', 'python']:
  local_resource(
    '%s_proto' % (lang),
    'docker run -v "$PWD/numbers":/defs namely/protoc-all -f numbers.proto -l %s' % (lang),
    deps=['numbers/numbers.proto'],
  )

